import tkinter as tk
import tkinter.messagebox as msg
from tkinter import ttk
import subprocess as sub
from threading import Thread
from time import time
from sys import executable
from os import listdir, getcwd


def window_settings(window, width, height, optional=0):
    screen_width = window.winfo_screenwidth()
    screen_height = window.winfo_screenheight()
    x = (screen_width / 2) - (width / 2)
    y = (screen_height / 2) - (height / 2)

    window.title("Evaluator")
    window.geometry('%dx%d+%d+%d' % (width, height, x, y + optional))
    window.resizable(False, False)
    window.attributes("-topmost", True)
    window.bind("<FocusIn>", window.focus_set())


def on_enter(window, button):
    button['background'] = 'light blue'
    button['relief'] = tk.RAISED
    if "⮚ " not in button['text']:
        button['text'] = "⮚ " + button['text']
    window.config(cursor="hand2")


def on_leave(window, button):
    button['background'] = 'white'
    button['relief'] = tk.SUNKEN
    if "⮚ " in button['text']:
        button['text'] = button['text'][2:]
    window.config(cursor="")


class Task(tk.Toplevel):
    def __init__(self):
        super().__init__()
        window_settings(self, 400, 40)
        self.config(bg="light blue")
        self.tasks = []
        for x in listdir(getcwd()):
            t = x.split(".")
            if len(t) == 2:
                if t[1] in ["py", "exe"]:
                    self.tasks.append(x)
        self.options = ttk.Combobox(self, values=self.tasks,
                                    font=("Verdana", 19),
                                    height=5, exportselection=0, width=17)
        self.button = tk.Button(self, width=10, text="Učitaj",
                                activebackground="#883e99", command=self.save,
                                font=("Verdana", 14))
        self.options.set(Program.task_name)
        self.options.pack(side=tk.LEFT)
        self.button.pack(side=tk.RIGHT)

    def save(self):
        Program.task_name = self.options.get()
        self.destroy()


class TimeLimit(tk.Toplevel):
    def __init__(self):
        super().__init__()
        window_settings(self, 200, 40)
        self.config(bg="light blue")

        self.number = tk.StringVar()
        self.text_box = tk.Entry(self, width=7, textvariable=self.number,
                                 font=("Verdana", 15))
        if not Program.time_limit:
            self.text_box.insert(0, "10")
            self.text_box.bind("<Button-1>", self._del)
        else:
            self.text_box.insert(0, Program.time_limit)
        self.button = tk.Button(self, width=10, text="Učitaj",
                                activebackground="#883e99", command=self.save,
                                font=("Verdana", 14))
        self.text_box.pack(side=tk.LEFT)
        self.button.pack(side=tk.RIGHT)

    def _del(self, _event):
        self.text_box.delete(0, tk.END)

    def save(self):
        Program.time_limit = self.text_box.get()
        self.destroy()


class AboutProgram(tk.Toplevel):
    def __init__(self):
        super().__init__()
        window_settings(self, 340, 180, 20)
        self.iconify()
        self.wm_overrideredirect(True)
        self.deiconify()

        self.about = tk.Canvas(self, width=340, height=180,
                               highlightthickness=0, bg="#d8fdff")
        self.back = tk.Button(self, width=40, font=("Verdana", 12),
                              bg="light blue", bd=0, text="Nazad",
                              activebackground="#883e99", cursor="hand2",
                              command=self.destroy)
        self.about.create_text(165, 22, text="Evaluator za natjecanje",
                               font=("Verdana", 16, "bold"))
        self.about.create_text(165, 55, text="Verzija: 1.0",
                               font=("Verdana", 12))
        self.about.create_text(165, 78, text="Za OS: Windows 7, 10",
                               font=("Verdana", 12))
        self.about.create_text(165, 100, text="Developer: Kristijan Rosandić",
                               font=("Verdana", 12))
        self.about.create_text(165, 122, text="kristijan.ros@gmail.com",
                               font=("Verdana", 12, "italic"), fill="gray")
        self.about.create_window(170, 160, window=self.back)
        self.about.pack()


class ResultScore(tk.Toplevel):
    def __init__(self, n):
        super().__init__()
        self.iconify()
        self.deiconify()
        window_settings(self, 400, 100)

        self.solved = n / 10
        self.var1 = tk.StringVar()
        self.var1.trace('w', self.calc)
        self.ResultScore = tk.Canvas(self, width=400, height=100,
                                     highlightthickness=0, bg="white")
        self.back = tk.Button(self, width=12, font=("Verdana", 12),
                              bg="white", bd=0, text="Nazad",
                              activebackground="#883e99", relief=tk.SUNKEN,
                              command=self.destroy)
        self.back.bind("<Enter>", lambda arg: on_enter(self, self.back))
        self.back.bind("<Leave>", lambda arg: on_leave(self, self.back))
        self.entry = tk.Entry(self, textvariable=self.var1)
        self.entry.configure(width=5, font=('Verdana', 12), justify='right')
        self.text_id = self.ResultScore.create_text(
            300, 38, anchor=tk.NW, text="", font=("Verdana", 14))
        self.ResultScore.create_text(
            140, 20, text="Unesi max. broj bodova:", font=("Verdana", 12))
        self.ResultScore.create_text(
            140, 50, text="Natjecateljev broj bodova:", font=("Verdana", 12))
        self.ResultScore.create_window(320, 20, window=self.entry)
        self.ResultScore.create_window(200, 80, window=self.back)
        self.ResultScore.pack()

    def calc(self, *_args):
        try:
            temp = str(round(self.solved * float(self.var1.get()), 2))
        except ValueError:
            temp = ""
        self.ResultScore.itemconfig(self.text_id, text=temp)


class Solution(tk.Toplevel):
    def __init__(self, _in, user_result, _out, color):
        super().__init__()
        window_settings(self, 600, 420, 20)
        self.attributes("-topmost", False)

        if color == "green":
            color = "#9eff9b"
        else:
            color = "#af4646"
        with open(_in) as f:
            task = "".join(f.readlines())

        self.solution = tk.Canvas(self, width=600, height=63,
                                  highlightthickness=0, bg="white")
        self.solution.create_line(192, 0, 192, 100, fill="light blue", width=2)
        self.solution.create_line(405, 0, 405, 100, fill="light blue", width=2)
        self.solution.create_text(95, 30, text="Zadatak",
                                  font=('Verdana', 14), justify=tk.CENTER)
        self.solution.create_text(297, 30, text="Natjecateljevo\nrješenje",
                                  font=('Verdana', 14), justify=tk.CENTER)
        self.solution.create_text(500, 30, text="Službeno\nrješenje",
                                  font=('Verdana', 14), justify=tk.CENTER)
        self.back = tk.Button(self, width=50, font=("Verdana", 17),
                              bg="white", bd=0, text="Nazad",
                              activebackground="#883e99", relief=tk.SUNKEN,
                              command=self.destroy)
        self.back.bind("<Enter>", lambda arg: on_enter(self, self.back))
        self.back.bind("<Leave>", lambda arg: on_leave(self, self.back))
        self.frames = [tk.Canvas(self, relief="sunken") for _ in range(3)]
        self.task, self._in, self._out = [
            tk.Text(f, width=z, height=20, relief=tk.SUNKEN,
                    font=('Courier New', 11), wrap=tk.NONE,
                    highlightthickness=0, cursor="hand2", bg="light blue")
            for f, z in zip(self.frames, (21, 23, 22))]
        self.back.pack(side=tk.BOTTOM)
        self.solution.pack()
        for x, y in zip((self.task, self._in, self._out), self.frames):
            v_scroll = tk.Scrollbar(y, orient=tk.HORIZONTAL, command=x.xview)
            x.configure(xscrollcommand=v_scroll.set)
            v_scroll.pack(side=tk.TOP, fill=tk.X)
            x.pack(side=tk.LEFT)
            y.pack(side=tk.LEFT, anchor=tk.N)
        self._in.config(bg=color)
        self.task.insert(tk.END, task)
        self._in.insert(tk.END, user_result)
        self._out.insert(tk.END, _out)


class Program(tk.Tk):
    task_name = ""
    time_limit = "10"

    def __init__(self):
        super().__init__()
        window_settings(self, 600, 420)
        self.attributes("-topmost", False)

        self.menu_bar = tk.Menu(self)
        self.menus = [tk.Menu(self.menu_bar, tearoff=0,
                              activebackground="light gray",
                              activeforeground="blue") for _menu_ in range(2)]
        self.menus[0].add_command(label="O programu", command=AboutProgram)
        self.menus[1].add_separator()
        self.menus[1].add_command(label="Izađi", command=self.fade_away)
        for label, menu in zip(("O programu", "Izađi"), self.menus):
            self.menu_bar.add_cascade(label=label, menu=menu)
        self.config(menu=self.menu_bar)

        self.canvas = tk.Canvas(self, width=600, height=420,
                                highlightthickness=0, bg="white")
        self.logo = tk.PhotoImage(data=program_logo)
        self.py_logo = tk.PhotoImage(data=py_logo)
        self.cpp_logo = tk.PhotoImage(data=cpp_logo)
        self.c_logo = tk.PhotoImage(data=c_logo)
        self.start_button = None
        self.log_button = None
        self.exit_button = None
        self.back = None
        self.final = None
        self.timer = None
        self.done = None
        self.solved_tasks = None
        self.stop = None
        self.stopped = None
        self.main()

    def main(self):
        self.canvas.delete("all")
        self.canvas.create_image(240, 25, image=self.logo, anchor='nw')
        self.canvas.create_image(30, 35, image=self.py_logo, anchor='nw')
        self.canvas.create_image(117, 35, image=self.cpp_logo, anchor='nw')
        self.canvas.create_image(190, 30, image=self.c_logo, anchor='nw')
        self.log_button = tk.Button(self, width=18, font=("Verdana", 17),
                                    bg="white", bd=0, text="Odaberi zadatak",
                                    activebackground="#883e99",
                                    relief=tk.SUNKEN, anchor=tk.W, command=Task)
        self.start_button = tk.Button(self, width=18, font=("Verdana", 17),
                                      bg="white", bd=0,
                                      text="Započni evaluaciju",
                                      activebackground="#883e99",
                                      relief=tk.SUNKEN, anchor=tk.W,
                                      command=self.start)
        self.exit_button = tk.Button(self, width=9, font=("Verdana", 17),
                                     bg="white", bd=0, text="Izađi",
                                     activebackground="#883e99",
                                     relief=tk.SUNKEN, anchor=tk.W,
                                     command=self.fade_away)
        self.timer = tk.Button(self, width=18, font=("Verdana", 17),
                               bg="white", bd=0, text="Vrem. ograničenje",
                               activebackground="#883e99", relief=tk.SUNKEN,
                               anchor=tk.W, command=TimeLimit)
        for button in (self.log_button, self.start_button,
                       self.exit_button, self.timer):
            button.bind("<Leave>", lambda args, b=button: on_leave(self, b))
            button.bind("<Enter>", lambda args, b=button: on_enter(self, b))
        self.canvas.create_window(165, 150 + 25, window=self.log_button)
        self.canvas.create_window(165, 195 + 25, window=self.timer)
        self.canvas.create_window(165, 240 + 25, window=self.start_button)
        self.canvas.create_window(100, 310 + 55, window=self.exit_button)
        self.canvas.pack()

    def fade_away(self):
        alpha = self.attributes("-alpha")
        if alpha > 0:
            alpha -= .0035
            self.attributes("-alpha", alpha)
            self.after(1, self.fade_away)
        else:
            self.destroy()

    def start(self):
        if not self.task_name[:-3]:
            msg.showerror("Greška",
                          "Niste ispravno unijeli natjecateljev zadatak.")
            return
        try:
            self.done = float(self.time_limit)
        except ValueError:
            msg.showerror("Greška",
                          "Niste ispravno unijeli vremensko ograničenje.")
            return

        _in = []
        _out = []
        try:
            path = getcwd() + "\Test"
            try:
                path += f"\{self.task_name[:-3]}"
                for test in listdir(path):
                    if test.count(".") == 2:
                        if ".in." in test:
                            _in.append(path + f"\{test}")
                        else:
                            _out.append(path + f"\{test}")
            except FileNotFoundError:
                msg.showerror("Greška", "Zadatak " + self.task_name +
                              " nije pronađen u mapi 'Test'.")
                return
        except FileNotFoundError:
            msg.showerror("Greška", "Mapa 'Test' nije pronađena "
                                    "u istom direktoriju s programom.")
            return
        _in.sort(key=lambda p: p[:-2])
        _out.sort(key=lambda p: p[:-2])

        self.canvas.delete("all")
        self.back = tk.Button(self, width=22, font=("Verdana", 17),
                              bg="white", bd=0, text="Nazad",
                              activebackground="#883e99", relief=tk.SUNKEN,
                              command=self.return_to_main)
        self.final = tk.Button(self, width=22, font=("Verdana", 17),
                               bg="white", bd=0, text="Rezultat",
                               activebackground="#883e99",
                               state=tk.DISABLED, relief=tk.SUNKEN,
                               command=lambda: ResultScore(self.solved_tasks))
        self.back.bind("<Enter>", lambda arg: on_enter(self, self.back))
        self.back.bind("<Leave>", lambda arg: on_leave(self, self.back))
        self.final.bind("<Enter>", lambda arg: on_enter(self, self.final))
        self.final.bind("<Leave>", lambda arg: on_leave(self, self.final))
        for n, h in zip(range(1, 11), range(25, 376, 35)):
            self.canvas.create_text(80, h, text=f"Test podatak {n}: ",
                                    font=('Verdana', '10'))
            self.canvas.create_line(0, h + 18, 600, h + 18,
                                    fill="light gray", width=2)
        self.canvas.create_window(150, 390, window=self.back)
        self.canvas.create_window(450, 390, window=self.final)
        self.stop = False
        Thread(target=self.check, args=(_in, _out)).start()

    def return_to_main(self):
        if self.stop:
            self.main()
        self.stop = True

    def stop_p(self, p):
        self.stopped = True
        p.kill()

    def check(self, _in, _out):
        self.solved_tasks = 0
        for x, y, h in zip(_in, _out, range(25, 376, 35)):
            if self.stop:
                return self.main()
            with open(x) as f1, open(y) as f2:
                task = "".join(f1.readlines())
                official_result = "".join(f2.readlines())

            timer = time()
            if "exe" in self.task_name:
                p = sub.Popen([self.task_name], stdout=sub.PIPE,
                              stdin=sub.PIPE, stderr=sub.STDOUT)
            else:
                p = sub.Popen([executable, self.task_name], stdout=sub.PIPE,
                              stdin=sub.PIPE, stderr=sub.STDOUT)
            stop = tk.Button(self, width=30, font=("Verdana", 11),
                             bg="white", bd=0, text="Zaustavi", fg="red",
                             activebackground="red", activeforeground="white",
                             relief=tk.SUNKEN,
                             command=lambda: self.stop_p(p))
            stop.bind("<Leave>", lambda args, b=stop: on_leave(self, b))
            stop.bind("<Enter>", lambda args, b=stop: on_enter(self, b))
            stop = self.canvas.create_window(330, h, window=stop)
            try:
                user_result = p.communicate(input=task.encode("utf-8"),
                                            timeout=20)[0].decode()
                done = round(time() - timer, 2)
            except sub.TimeoutExpired:
                user_result = "Program je automatski zaustavljen jer bi" \
                              " trajao predugo (20s+)."
                done = "---"
            self.canvas.delete(stop)
            p.kill()
            fill = "gray"
            result = "Rješenje je ispravno"
            color = "green"
            if isinstance(done, str):
                fill = "red"
            elif done > self.done:
                fill = "red"
                done = str(done) + "s"
            if self.stopped:
                self.stopped = False
                done = "---"
                result = "Program je zaustavljen"
                color = "red"
                fill = "red"
            elif user_result.replace('\r', '') != official_result:
                result = "Rješenje NIJE ispravno"
                color = "red"

            button = tk.Button(self, width=8, font=("Verdana", 10),
                               bg="white", bd=0, text="Rješenje",
                               activebackground="#883e99", relief=tk.SUNKEN,
                               command=lambda a=x, b=user_result,
                                              c=official_result,
                                              d=color: Solution(a, b, c, d))
            button.bind("<Leave>", lambda args, b=button: on_leave(self, b))
            button.bind("<Enter>", lambda args, b=button: on_enter(self, b))
            self.canvas.create_window(530, h, window=button)
            self.canvas.create_text(240, h, text=result,
                                    font=('Verdana', 10), fill=color)
            self.canvas.create_text(398, h, text=f"Vrijeme: {done}",
                                    font=('Verdana', 10), fill=fill)
            if color == "green" and fill == "gray":
                self.solved_tasks += 1
        self.stop = True
        self.done = self.solved_tasks
        self.final.config(state=tk.NORMAL)
        ResultScore(self.solved_tasks)


if __name__ == '__main__':
    program_logo = ""
    py_logo = "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"
    cpp_logo = "iVBORw0KGgoAAAANSUhEUgAAAD8AAABGCAYAAAB7ckzWAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAADJGlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNS4zLWMwMTEgNjYuMTQ1NjYxLCAyMDEyLzAyLzA2LTE0OjU2OjI3ICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxuczpzdFJlZj0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVmIyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ1M2IChNYWNpbnRvc2gpIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOkQ2NDAwMTdEREY3NzExRTZCNkEzRTA4RDJFOEMxNzMxIiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOkQ2NDAwMTdFREY3NzExRTZCNkEzRTA4RDJFOEMxNzMxIj4gPHhtcE1NOkRlcml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6RDY0MDAxN0JERjc3MTFFNkI2QTNFMDhEMkU4QzE3MzEiIHN0UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6RDY0MDAxN0NERjc3MTFFNkI2QTNFMDhEMkU4QzE3MzEiLz4gPC9yZGY6RGVzY3JpcHRpb24+IDwvcmRmOlJERj4g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"
    c_logo = "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"

    program = Program()
    program.mainloop()
